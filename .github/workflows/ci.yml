name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

env:
  PYTHON_VERSION: '3.12'

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install dependencies
        run: |
          uv sync --group test

      - name: Run tests
        run: |
          uv run pytest -v

      - name: Run tests with coverage
        run: |
          uv run pytest --cov=claude_wt --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: |
          uv sync --group dev

      - name: Run pyright type checker
        run: |
          uv run pyright claude_wt
        continue-on-error: true  # Don't fail CI on type errors for now

      - name: Check formatting with ruff
        run: |
          uv run ruff check claude_wt tests
        continue-on-error: true  # Don't fail CI on linting errors for now

  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for versioning

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Build package
        run: |
          uv build

      - name: Check built distributions
        run: |
          ls -la dist/
          uv pip install --system check-wheel-contents
          check-wheel-contents dist/*.whl
        continue-on-error: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          if-no-files-found: error
          retention-days: 5

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install claude-wt from wheel
        run: |
          uv pip install --system dist/*.whl

      - name: Test CLI commands
        run: |
          claude-wt version
          claude-wt --help
          claude-wt list --help

      - name: Test in git repository
        run: |
          git config --global user.email "test@example.com"
          git config --global user.name "Test User"
          git init test-repo
          cd test-repo
          echo "# Test" > README.md
          git add README.md
          git commit -m "Initial commit"
          claude-wt init
          cat .gitignore | grep ".claude-wt/worktrees" || exit 1